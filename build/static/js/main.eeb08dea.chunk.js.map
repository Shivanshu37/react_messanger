{"version":3,"sources":["Message.js","firebase.js","App.js","index.js"],"names":["Message","forwardRef","props","ref","username","message","isUser","className","Card","CardContent","Typography","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","FormControl","InputLabel","Input","placeholder","value","onChange","event","target","IconButton","disabled","color","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAoBeA,EAjBCC,sBAAW,SAACC,EAAMC,GAC9B,IAAMC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAASF,IAAaC,EAAQD,SACpC,OACI,qBAAKD,IAAOA,EAAKI,UAAS,qBAAgBD,GAAU,gBAApD,SACA,cAACE,EAAA,EAAD,CAAMD,UAAWD,EAAS,mBAAqB,oBAA/C,SACF,cAACG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,WACGN,GAAD,UAAcD,EAAQD,UAAY,eAAlC,MAAuDC,EAAQA,oB,QCA1DQ,EAXKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAGIC,Y,iCC2CRC,MA7Cf,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACNC,EADM,KACAC,EADA,OAEkBF,mBAAS,CAAC,CAACrB,SAAS,YAAYC,QAAQ,OAAO,CAACD,SAAS,OAAOC,QAAQ,WAF1F,mBAENuB,EAFM,KAEGC,EAFH,OAGkBJ,mBAAS,IAH3B,mBAGNrB,EAHM,KAGG0B,EAHH,KAyBb,OApBAC,qBAAU,WACPlB,EAAGmB,WAAW,YACbC,QAAQ,YAAY,QACpBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAGD,EAAIC,GAAGlC,QAAUiC,EAAIE,iBAElE,IAEFT,qBAAU,WACRD,EAAYW,OAAO,8BACnB,IAWA,sBAAKlC,UAAU,MAAf,UACA,wDACA,0CAAaH,KACb,sBAAMG,UAAU,WAAhB,SACA,eAACmC,EAAA,EAAD,CAAanC,UAAU,kBAAvB,UACF,cAACoC,EAAA,EAAD,iCACA,cAACC,EAAA,EAAD,CAAOrC,UAAU,YAAYsC,YAAY,qBAAqBC,MAAOpB,EAAOqB,SAAU,SAAAC,GAAK,OAAIrB,EAASqB,EAAMC,OAAOH,UACrH,cAACI,EAAA,EAAD,CAAY3C,UAAU,iBAAiB4C,UAAWzB,EAAOf,QAAQ,WAAWyC,MAAM,UAAUC,QAjBvE,SAACL,GACpBA,EAAMM,iBACNzC,EAAGmB,WAAW,YAAYuB,IAAI,CAC5BlD,QAAQqB,EACRtB,SAASA,EACToD,UAAW1C,IAASS,UAAUkC,WAAWC,oBAE3C/B,EAAS,KAUwGgC,KAAK,SAAxH,SAAiI,cAAC,IAAD,WAG/H,cAAC,IAAD,UAEE/B,EAASS,KAAI,YAAmB,IAAjBE,EAAgB,EAAhBA,GAAGlC,EAAa,EAAbA,QAAc,OAAO,cAAC,EAAD,CAAkBD,SAAUA,EAAUC,QAASA,GAAjCkC,YC3C3DqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eeb08dea.chunk.js","sourcesContent":["import React,{forwardRef} from 'react';\r\nimport \"./Message.css\";\r\nimport {Card,Typography,CardContent} from '@material-ui/core';\r\nconst Message = forwardRef((props,ref) => {\r\n    const username = props.username;\r\n    const message = props.message;\r\n    const isUser = username === message.username;\r\n    return (\r\n        <div ref = {ref} className={`message && ${isUser && 'message_user'}`}>\r\n        <Card className={isUser ? \"message_userCard\" : \"message_guestCard\"}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        { !isUser && `${message.username || 'Unknown User'}: ` }{message.message}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n        </div>\r\n    )\r\n}\r\n)\r\nexport default Message;\r\n","import firebase from \"firebase\";\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBZmqnm-oSzEIqKNIIeMIc6BNnhDLxzQ4Y\",\r\n    authDomain: \"messanger-c320e.firebaseapp.com\",\r\n    projectId: \"messanger-c320e\",\r\n    storageBucket: \"messanger-c320e.appspot.com\",\r\n    messagingSenderId: \"10733757500\",\r\n    appId: \"1:10733757500:web:f51e78ba9ae022fc724f39\",\r\n    measurementId: \"G-WLK0S9PKZD\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db;","import { useState,useEffect } from \"react\";\nimport {Button,FormControl,Input,InputLabel} from \"@material-ui/core\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nfunction App() {\n  const [input,setInput] = useState('');\n  const [messages,setMessages] = useState([{username:'Shivanshu',message:'hey'},{username:'Shiv',message:'hello'}]);\n  const [username,setUsername] = useState('');\n\n  useEffect(() => {\n     db.collection('messages')\n     .orderBy('timestamp','desc')\n     .onSnapshot(snapshot => {\n       setMessages(snapshot.docs.map(doc => ({id:doc.id,message : doc.data()})))\n     });\n  },[])\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name:'));\n  },[])\n  const sendMessages = (event) => {\n    event.preventDefault();\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n    <h1>Hello Messanger âœ”</h1>\n    <h2>Welcome {username}</h2>\n    <form className=\"app_form\">\n    <FormControl className=\"app_formControl\">\n  <InputLabel>Enter a message...</InputLabel>\n  <Input className=\"app_input\" placeholder=\"Enter a message...\" value={input} onChange={event => setInput(event.target.value)} />\n  <IconButton className=\"app_iconButton\" disabled={!input} variant=\"outlined\" color=\"primary\" onClick={sendMessages} type=\"submit\"><SendIcon /></IconButton>\n   </FormControl>\n    </form>\n    <FlipMove>\n    {\n      messages.map(({id,message}) => {return <Message key={id} username={username} message={message} />})\n    }\n    </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}